<script>
 Ext.onReady(function () {
      new Ext.Toolbar({
        renderTo: Ext.getBody(),
        items: [{
            xtype: 'tbbutton',
            text: 'Xem dữ liệu',
        },
            '->'
        ,{
          xtype: 'tbbutton',
          text: 'Đăng nhập',
          handler: function () {
            var ee;
            if(!ee){
              ee = new Ext.Window({
              layout: 'form',
              height: '100%',
              title:'Đăng nhập',
              alignButton: 'right',
              items: [
                { id: 'tendangnhap',xtype: 'textfield', fieldLabel: 'Tên đăng nhập:' },
                { id: 'matkhau',xtype: 'textfield', inputType: 'password' ,fieldLabel: 'Mật khẩu:' },
                {
                  method: 'POST',
                  xtype: 'button',
                  scale: 'large',
                  text: 'Đăng nhập',
                  handler: function(){
                      Ext.Msg.alert('Tiêu đề','<br>Tên đăng nhập: '+ Ext.getCmp('tendangnhap').getValue() + '<br><br>Mật khẩu:'+Ext.getCmp('matkhau').getValue())
                  }
                }
              ]
            });
            }
            ee.show(this);
          }
        }]
      });

        var params;
        // var orders;

        Ext.QuickTips.init();
      Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

        // sample static data for the store
        var myData = params;
        /**
         * Custom function used for column renderer
         * @param {Object} val
         */
        function change(val) {
            if (val > 0) {
                return '<span style="color:#EFEBE9; font-size:15px;>' + val + '</span>';
            } else if (val < 0) {
                return '<span style="color:red;">' + val + '</span>';
            }
            return val;
        }

        // create the data store
        store = new Ext.data.JsonStore({
            autoDestroy: true,
            url: "<%= khaches_path(:format => :json) %>",
            // reader configs
            
            fields: [
            { name: 'id', mapping: 'id'},
            { name: 'ten', mapping: 'ten' },
            { name: 'tuoi', mapping: 'tuoi' },
            { name: 'diachi', mapping: 'diachi' }]
        });

        store.load();
         //debugger;
      var sm = new Ext.grid.CheckboxSelectionModel()
        var grid = new Ext.grid.GridPanel({
          id: 'dulieua',
          layout: 'fit',
            store: store,
            columns: [
                sm,
                {
                    id: 'id',
                    lockable: true,
                    header: 'ID',
                    sortable: true,
                    dataIndex: 'id'
                },
                 {
                    header: 'Tên',
                    width: 160,
                    sortable: true,
                    dataIndex: 'ten'
                 },
                 {
                    header: 'Tuổi',
                    width: 160,
                    sortable: true,
                    dataIndex: 'tuoi'
                },
                {
                    header: 'Địa chỉ',
                    width: 160,
                    sortable: true,
                    dataIndex: 'diachi'
                }
            ],
            sm: sm,
            stripeRows: true,
            height: 210,
            title: 'JsonGrid',
            collapsible: false,
            // config options for stateful behavior
            stateful: true,
            stateId: 'grid',
            // Phaan trang
              bbar: new Ext.PagingToolbar({
            pageSize: 25,
            store: store,
            displayInfo: true,
            displayMsg: 'Trang {0}',
            emptyMsg: "Không có hàng nào",
            items:[
                '-', {
                enableToggle:true,
                cls: 'x-btn-text-icon details',
                toggleHandler: function(btn, pressed){
                    store.load();
                }
            }]
        }),
        // inline toolbars
        tbar:[
          {
          text:'Làm mới',
            tooltip:'Làm mới', 
            handler: function(){
                store.load();
                //store.load({params:{start:0, limit:25}});
            }
        },{
          text:'Xóa',
            tooltip:'Xóa', 
            handler: function(){
             var s = grid.getSelectionModel().getSelections();
            selected = [];
            Ext.each(s, function (item) {
              selected.push(item.get('id'));
            });
          Ext.Msg.show({
            title: 'Thông báo',
            msg:"Danh sách id: "+selected,
            height:40,
            buttons:{
              yes: true,
              no: true
            },
          fn: function(bt){
            if(bt == 'yes') {
              for (let i=0; i<selected.length; i++){
              Ext.Ajax.request({
                url: '<%=khaches_delete_khach_path%>',
                method: 'DELETE',
                params: {
                  khach_id: selected[i],
                },
                 success: function(response) {
                    console.log("The request was successfull");
                    store.load();
                  }, 
                 failure: function(response) {
                      console.log("Request is failed");
                  }
              });
              }
            }
            else
              return;
           }
          });

            }
        },{
          text:'test',
            tooltip:'Xóa', 
            handler: function(){
              Ext.Msg.alert('aaa',grid.getSelectionModel().getSelection());
            }
        },'->',{text:'Tìm kiếm:'},
        {
          id: 'tukhoa',
          xtype: 'textfield',
          emptyText : 'Từ khoá',
        },{
            xtype: 'combo',
            width: 80,
            valueField: 'ten',
            autoSelect:true,
            forceSelection:true,
            store: ['Tên','Tuổi','Địa chỉ'],
            disabled:true
          },{
          xtype: 'button',
          text: 'Tìm',
          handler: function(){
              store.filter([
                {
                  property: 'ten',
                  value: Ext.getCmp('tukhoa').getValue(),
                  // exactMatch: true,
                  // caseSensitive: true
                }
              ]).load(); 
              //store.load();
          }
        }]
        });
    grid.on('cellclick', function (grid, rowIndex, columnIndex, e) {
        var record = grid.getStore().getAt(rowIndex);  // Get the Record
        var fieldName = grid.getColumnModel().getDataIndex(columnIndex); // Get field name
        var data = record.get(fieldName);
        //Ext.Msg.alert('Di ', data);
      })
        // render the grid to the specified div in the page
        //grid.render('grid-example');
        grid.render('dulieutab1');
    });

    


    /*!
     * Ext JS Library 3.4.0
     * Copyright(c) 2006-2011 Sencha Inc.
     * licensing@sencha.com
     * http://www.sencha.com/license
     */
    Ext.onReady(function () {
      var win;
      //id cái nút Tab ne
      var button = Ext.get('ext-gen6');

      button.on('click', function () {
        // create the window on the first click and reuse on subsequent clicks
        if (!win) {
          win = new Ext.Window({
            applyTo: 'hello-win',
            layout: 'fit',
            width: 562,
            height: 300,
            closeAction: 'hide',
            plain: true,

            items: new Ext.TabPanel({
              applyTo: 'hello-tabs',
              autoTabs: true,
              activeTab: 0,
              deferredRender: false,
              border: false
            }),

            buttons: [{
              text: 'Submit',
              disabled: true
            }, {
              text: 'Close',
              handler: function () {
                win.hide();
              }
            }]
          });
        }
        win.show(this);
      });
    });

Ext.onReady(function(){
 Ext.QuickTips.init();

    // turn on validation errors beside the field globally
    Ext.form.Field.prototype.msgTarget = 'side';

    var aaaaa = new Ext.form.FormPanel({
        monitorValid: true,
        labelWidth: 75,
        frame: true,
        title: 'Tạo khách',
        width: 250,
        defaultType: 'textfield',

        items: [
          { id: 'ten', fieldLabel: 'Tên', name: 'ten' },
          { id: 'tuoi', xtype: 'numberfield', fieldLabel: 'Tuổi', name: 'tuoi' },
          { id: 'diachi', fieldLabel: 'Địa chỉ', name: 'diachi' },
        ],

        buttons: [
            {
                text: 'Tạo mới',
                handler: function () { 
                  Ext.Ajax.request({
                url: '<%= khaches_path %>',
                method: 'POST',
                jsonData: {
                  ten: Ext.getCmp('ten').getValue(),
                  tuoi: Ext.getCmp('tuoi').getValue(),
                  diachi: Ext.getCmp('diachi').getValue(),
                },
                 success: function(response) {
                    console.log("The request was successfull");
                    store.load();
                  }, 
                 failure: function(response) {
                      console.log("Request is failed");
                  }
              });
                 }
            }
        ]
    });
    aaaaa.render('taomoi');
    
});



  </script>

<p id="notice"><%= notice %></p>


<br>
<div id="hello-win" class="x-hidden">
    <div class="x-window-header">Dữ liệu đã thêm</div>
    <div id="hello-tabs">
      <!-- tab 1 -->
      <div id="dulieutab1" class="x-tab" title="//Tab1">
      </div>
      </div>
    </div>
  </div>
  <div id="grid-example"></div>
  <div id="taomoi"></div>
